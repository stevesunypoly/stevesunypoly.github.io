Script started on Wed Nov  2 14:42:48 2016
[?1034hbash-3.2$ 
bash-3.2$ script --help
script: illegal option -- -
usage: script [-akq] [-t time] [file [command ...]]
bash-3.2$ man script
[?1049h[?1h=
SCRIPT(1)                 BSD General Commands Manual                SCRIPT(1)

[1mNAME[0m
     [1mscript[0m -- make typescript of terminal session

[1mSYNOPSIS[0m
     [1mscript[0m [[1m-akq[0m] [[1m-t[0m [4mtime[24m] [[4mfile[24m [[4mcommand[24m [4m...[24m]]

[1mDESCRIPTION[0m
     The [1mscript[0m utility makes a typescript of everything printed on your terminal.
     It is useful for students who need a hardcopy record of an interactive session
     as proof of an assignment, as the typescript file can be printed out later with
     lpr(1).

     If the argument [4mfile[24m is given, [1mscript[0m saves all dialogue in [4mfile[24m.  If no file
     name is given, the typescript is saved in the file [4mtypescript[24m.

     If the argument [4mcommand[24m is given, [1mscript[0m will run the specified command with an
     optional argument vector instead of an interactive shell.

     The following options are available:

     [1m-a[0m      Append the output to [4mfile[24m or [4mtypescript[24m, retaining the prior contents.

     [1m-k[0m      Log keys sent to program as well as output.

     [1m-q[0m      Run in quiet mode, omit the start and stop status messages.

     [1m-t[0m [4mtime[24m
             Specify time interval between flushing script output file.  A value of
             0 causes [1mscript[0m to flush for every character I/O event.  The default
             interval is 30 seconds.

     The script ends when the forked shell (or command) exits (a [4mcontrol-D[24m to exit
     the Bourne shell (sh(1)), and [4mexit[24m, [4mlogout[24m or [4mcontrol-D[24m (if [4mignoreeof[24m is not
     set) for the C-shell, csh(1)).

     Certain interactive commands, such as vi(1), create garbage in the typescript
     file.  The [1mscript[0m utility works best with commands that do not manipulate the
     screen.  The results are meant to emulate a hardcopy terminal, not an address-
     able one.

[1mENVIRONMENT[0m
     The following environment variable is utilized by [1mscript[0m:

     SHELL  If the variable SHELL exists, the shell forked by [1mscript[0m will be that
            shell.  If SHELL is not set, the Bourne shell is assumed.  (Most shells
            set this variable automatically).
:[K[K
[1mSEE[0m [1mALSO[0m
     csh(1) (for the [4mhistory[24m mechanism).

[1mHISTORY[0m
     The [1mscript[0m command appeared in 3.0BSD.

[1mBUGS[0m
     The [1mscript[0m utility places [1meverything[0m in the log file, including linefeeds and
     backspaces.  This is not what the naive user expects.

     It is not possible to specify a command without also naming the script file
     because of argument parsing compatibility issues.

     When running in [1m-k[0m mode, echo cancelling is far from ideal.  The slave terminal
     mode is checked for ECHO mode to check when to avoid manual echo logging.  This
     does not work when in a raw mode where the program being run is doing manual
     echo.

BSD                            January 22, 2004                            BSD
[7m(END) [27m[K[K[HM     optional argument vector instead of an interactive shell.
[HM     If the argument [4mcommand[24m is given, [1mscript[0m will run the specified command with an
[HM
[HM     name is given, the typescript is saved in the file [4mtypescript[24m.
[HM     If the argument [4mfile[24m is given, [1mscript[0m saves all dialogue in [4mfile[24m.  If no file
[HM
[HM     lpr(1).
[HM     as proof of an assignment, as the typescript file can be printed out later with
[HM     It is useful for students who need a hardcopy record of an interactive session
[HM     The [1mscript[0m utility makes a typescript of everything printed on your terminal.
[HM[1mDESCRIPTION[0m
[HM
[HM     [1mscript[0m [[1m-akq[0m] [[1m-t[0m [4mtime[24m] [[4mfile[24m [[4mcommand[24m [4m...[24m]]
[HM[1mSYNOPSIS[0m
[HM
[HM     [1mscript[0m -- make typescript of terminal session
[HM[1mNAME[0m
[HM
[HMSCRIPT(1)                 BSD General Commands Manual                SCRIPT(1)
[HM
[50;1H[K:[K[K[?1l>[?1049lbash-3.2$ man script --verbose
man: unrecognized option `--verbose'
man, version 1.6c

usage: man [-adfhktwW] [section] [-M path] [-P pager] [-S list]
	[-m system] [-p string] name ...

  a : find all matching entries
  c : do not use cat file
  d : print gobs of debugging information
  D : as for -d, but also display the pages
  f : same as whatis(1)
  h : print this help message
  k : same as apropos(1)
  K : search for a string in all pages
  t : use troff to format pages for printing
  w : print location of man page(s) that would be displayed
      (if no name given: print directories that would be searched)
  W : as for -w, but display filenames only

  C file   : use `file' as configuration file
  M path   : set search path for manual pages to `path'
  P pager  : use program `pager' to display pages
  S list   : colon separated section list
  m system : search for alternate system's man pages
  p string : string tells which preprocessors to run
               e - [n]eqn(1)   p - pic(1)    t - tbl(1)
               g - grap(1)     r - refer(1)  v - vgrind(1)
bash-3.2$ man script
[?1049h[?1h=
SCRIPT(1)                 BSD General Commands Manual                SCRIPT(1)

[1mNAME[0m
     [1mscript[0m -- make typescript of terminal session

[1mSYNOPSIS[0m
     [1mscript[0m [[1m-akq[0m] [[1m-t[0m [4mtime[24m] [[4mfile[24m [[4mcommand[24m [4m...[24m]]

[1mDESCRIPTION[0m
     The [1mscript[0m utility makes a typescript of everything printed on your terminal.
     It is useful for students who need a hardcopy record of an interactive session
     as proof of an assignment, as the typescript file can be printed out later with
     lpr(1).

     If the argument [4mfile[24m is given, [1mscript[0m saves all dialogue in [4mfile[24m.  If no file
     name is given, the typescript is saved in the file [4mtypescript[24m.

     If the argument [4mcommand[24m is given, [1mscript[0m will run the specified command with an
     optional argument vector instead of an interactive shell.

     The following options are available:

     [1m-a[0m      Append the output to [4mfile[24m or [4mtypescript[24m, retaining the prior contents.

     [1m-k[0m      Log keys sent to program as well as output.

     [1m-q[0m      Run in quiet mode, omit the start and stop status messages.

     [1m-t[0m [4mtime[24m
             Specify time interval between flushing script output file.  A value of
             0 causes [1mscript[0m to flush for every character I/O event.  The default
             interval is 30 seconds.

     The script ends when the forked shell (or command) exits (a [4mcontrol-D[24m to exit
     the Bourne shell (sh(1)), and [4mexit[24m, [4mlogout[24m or [4mcontrol-D[24m (if [4mignoreeof[24m is not
     set) for the C-shell, csh(1)).

     Certain interactive commands, such as vi(1), create garbage in the typescript
     file.  The [1mscript[0m utility works best with commands that do not manipulate the
     screen.  The results are meant to emulate a hardcopy terminal, not an address-
     able one.

[1mENVIRONMENT[0m
     The following environment variable is utilized by [1mscript[0m:

     SHELL  If the variable SHELL exists, the shell forked by [1mscript[0m will be that
            shell.  If SHELL is not set, the Bourne shell is assumed.  (Most shells
            set this variable automatically).
:[K[K[?1l>[?1049lbash-3.2$ man script --[Kh
man, version 1.6c

usage: man [-adfhktwW] [section] [-M path] [-P pager] [-S list]
	[-m system] [-p string] name ...

  a : find all matching entries
  c : do not use cat file
  d : print gobs of debugging information
  D : as for -d, but also display the pages
  f : same as whatis(1)
  h : print this help message
  k : same as apropos(1)
  K : search for a string in all pages
  t : use troff to format pages for printing
  w : print location of man page(s) that would be displayed
      (if no name given: print directories that would be searched)
  W : as for -w, but display filenames only

  C file   : use `file' as configuration file
  M path   : set search path for manual pages to `path'
  P pager  : use program `pager' to display pages
  S list   : colon separated section list
  m system : search for alternate system's man pages
  p string : string tells which preprocessors to run
               e - [n]eqn(1)   p - pic(1)    t - tbl(1)
               g - grap(1)     r - refer(1)  v - vgrind(1)
bash-3.2$ man -h
man, version 1.6c

usage: man [-adfhktwW] [section] [-M path] [-P pager] [-S list]
	[-m system] [-p string] name ...

  a : find all matching entries
  c : do not use cat file
  d : print gobs of debugging information
  D : as for -d, but also display the pages
  f : same as whatis(1)
  h : print this help message
  k : same as apropos(1)
  K : search for a string in all pages
  t : use troff to format pages for printing
  w : print location of man page(s) that would be displayed
      (if no name given: print directories that would be searched)
  W : as for -w, but display filenames only

  C file   : use `file' as configuration file
  M path   : set search path for manual pages to `path'
  P pager  : use program `pager' to display pages
  S list   : colon separated section list
  m system : search for alternate system's man pages
  p string : string tells which preprocessors to run
               e - [n]eqn(1)   p - pic(1)    t - tbl(1)
               g - grap(1)     r - refer(1)  v - vgrind(1)
bash-3.2$ man script -h
man, version 1.6c

usage: man [-adfhktwW] [section] [-M path] [-P pager] [-S list]
	[-m system] [-p string] name ...

  a : find all matching entries
  c : do not use cat file
  d : print gobs of debugging information
  D : as for -d, but also display the pages
  f : same as whatis(1)
  h : print this help message
  k : same as apropos(1)
  K : search for a string in all pages
  t : use troff to format pages for printing
  w : print location of man page(s) that would be displayed
      (if no name given: print directories that would be searched)
  W : as for -w, but display filenames only

  C file   : use `file' as configuration file
  M path   : set search path for manual pages to `path'
  P pager  : use program `pager' to display pages
  S list   : colon separated section list
  m system : search for alternate system's man pages
  p string : string tells which preprocessors to run
               e - [n]eqn(1)   p - pic(1)    t - tbl(1)
               g - grap(1)     r - refer(1)  v - vgrind(1)
bash-3.2$ script -h
script: illegal option -- h
usage: script [-akq] [-t time] [file [command ...]]
bash-3.2$ script -h[Kps -l
  UID   PID  PPID        F CPU PRI NI       SZ    RSS WCHAN     S             ADDR TTY           TIME CMD
1505386895  7653  7652     4006   0  31  0  2461020    832 -      S                   0 ttys000    0:00.11 -bash
1505386895  7658  7653     4006   0  31  0  3206980   3532 -      S                   0 ttys000    0:04.50 node /usr/local/
1505386895 12046  7653     4006   0  31  0  3160688  11564 -      S                   0 ttys000    0:01.04 node /usr/local/
1505386895 12404  7653     4006   0  31  0  2432760    564 -      S+                  0 ttys000    0:00.01 script
1505386895 12405 12404     4006   0  31  0  2452828   1248 -      Ss                  0 ttys001    0:00.02 /bin/bash -i
bash-3.2$ ps -l
  UID   PID  PPID        F CPU PRI NI       SZ    RSS WCHAN     S             ADDR TTY           TIME CMD
1505386895  7653  7652     4006   0  31  0  2461020    832 -      S                   0 ttys000    0:00.11 -bash
1505386895  7658  7653     4006   0  31  0  3206980   3532 -      S                   0 ttys000    0:04.50 node /usr/local/
1505386895 12046  7653     4006   0  31  0  3160688  11564 -      S                   0 ttys000    0:01.04 node /usr/local/
1505386895 12404  7653     4006   0  31  0  2432760    564 -      S+                  0 ttys000    0:00.01 script
1505386895 12405 12404     4006   0  31  0  2452828   1248 -      Ss                  0 ttys001    0:00.02 /bin/bash -i
bash-3.2$ ps -k
ps: illegal option -- k
usage: ps [-AaCcEefhjlMmrSTvwXx] [-O fmt | -o fmt] [-G gid[,gid...]]
          [-g grp[,grp...]] [-u [uid,uid...]]
          [-p pid[,pid...]] [-t tty[,tty...]] [-U user[,user...]]
       ps [-L]
bash-3.2$ man ps
[?1049h[?1h=
PS(1)                     BSD General Commands Manual                    PS(1)

[1mNAME[0m
     [1mps[0m -- process status

[1mSYNOPSIS[0m
     [1mps[0m [[1m-AaCcEefhjlMmrSTvwXx[0m] [[1m-O[0m [4mfmt[24m | [1m-o[0m [4mfmt[24m] [[1m-G[0m [4mgid[24m[,[4mgid...[24m]] [[1m-g[0m [4mgrp[24m[,[4mgrp...[24m]]
        [[1m-u[0m [4muid[24m[,[4muid...[24m]] [[1m-p[0m [4mpid[24m[,[4mpid...[24m]] [[1m-t[0m [4mtty[24m[,[4mtty...[24m]] [[1m-U[0m [4muser[24m[,[4muser...[24m]]
     [1mps[0m [[1m-L[0m]

[1mDESCRIPTION[0m
     The [1mps[0m utility displays a header line, followed by lines containing information
     about all of your processes that have controlling terminals.

     A different set of processes can be selected for display by using any combina-
     tion of the [1m-a[0m, [1m-G[0m, [1m-g[0m, [1m-p[0m, [1m-T[0m, [1m-t[0m, [1m-U[0m, and [1m-u[0m options.  If more than one of
     these options are given, then [1mps[0m will select all processes which are matched by
     at least one of the given options.

     For the processes which have been selected for display, [1mps[0m will usually display
     one line per process.  The [1m-M[0m option may result in multiple output lines (one
     line per thread) for some processes.  By default all of these output lines are
     sorted first by controlling terminal, then by process ID.  The [1m-m[0m, [1m-r[0m, and [1m-v[0m
     options will change the sort order.  If more than one sorting option was given,
     then the selected processes will be sorted by the last sorting option which was
     specified.

     For the processes which have been selected for display, the information to dis-
     play is selected based on a set of keywords (see the [1m-L[0m, [1m-O[0m, and [1m-o[0m options).
     The default output format includes, for each process, the process' ID, control-
     ling terminal, CPU time (including both user and system time), state, and asso-
     ciated command.

     The options are as follows:

     [1m-A[0m      Display information about other users' processes, including those with-
             out controlling terminals.

     [1m-a[0m      Display information about other users' processes as well as your own.
             This will skip any processes which do not have a controlling terminal,
             unless the [1m-x[0m option is also specified.

     [1m-C[0m      Change the way the CPU percentage is calculated by using a ``raw'' CPU
             calculation that ignores ``resident'' time (this normally has no
             effect).

     [1m-c[0m      Change the ``command'' column output to just contain the executable
             name, rather than the full command line.
:[K[K[?1l>[?1049lbash-3.2$ ps -L
%cpu %mem acflag acflg args blocked caught comm command cpu cputime etime f flags gid group
ignored inblk inblock jobc ktrace ktracep lim login logname lstart majflt minflt msgrcv
msgsnd ni nice nivcsw nsignals nsigs nswap nvcsw nwchan oublk oublock p_ru paddr pagein pcpu
pending pgid pid pmem ppid pri pstime putime re rgid rgroup rss ruid ruser sess sig sigmask
sl start stat state stime svgid svuid tdev time tpgid tsess tsiz tt tty ucomm uid upr user
usrpri utime vsize vsz wchan wq wqb wql wqr xstat
bash-3.2$ ps -l
  UID   PID  PPID        F CPU PRI NI       SZ    RSS WCHAN     S             ADDR TTY           TIME CMD
1505386895  7653  7652     4006   0  31  0  2461020    832 -      S                   0 ttys000    0:00.11 -bash
1505386895  7658  7653     4006   0  31  0  3206980   3532 -      S                   0 ttys000    0:04.50 node /usr/local/
1505386895 12046  7653     4006   0  31  0  3160688  11564 -      S                   0 ttys000    0:01.04 node /usr/local/
1505386895 12404  7653     4006   0  31  0  2432760    564 -      S+                  0 ttys000    0:00.02 script
1505386895 12405 12404     4006   0  31  0  2452828   1248 -      Ss                  0 ttys001    0:00.02 /bin/bash -i
bash-3.2$ pwd
/Users/steve/Documents/work/steve-tiddlywiki-github/designwritestudio.github.io/node-js/stevenmschneider
bash-3.2$ cd ..
bash-3.2$ ls
curriculum-action-edition	projectGitHub
my-first-node-wiki.html		stevenmschneider
bash-3.2$ lscd ..[2Ppwds -lLman ps[1Pps -klscript -h[4@man [C[C[C[C[C[C[C[C[C-h[Kscript -h[K --verbose[Kscript --help[C[C[C[C[C[C[C[C[C[Ctiddlywiki stevenmschneider  --serverinit server[C[C[C[C[C[C[C[C[C[Cls[Kpwd[1Plstiddlywiki stevenmschneider  --init server[5Pserver[C[C[C[C[C[C[C[C[C[C[24Pscript --help[C[C[C[C[C[C[C[C[C[Ctiddlywiki stevenmschneider  --server
Serving on 127.0.0.1:8080
(press ctrl-C to exit)
events.js:141
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE 127.0.0.1:8080
    at Object.exports._errnoException (util.js:907:11)
    at exports._exceptionWithHostPort (util.js:930:20)
    at Server._listen2 (net.js:1250:14)
    at listen (net.js:1286:10)
    at net.js:1395:9
    at nextTickCallbackWith3Args (node.js:453:9)
    at process._tickCallback (node.js:359:17)
    at Function.Module.runMain (module.js:443:11)
    at startup (node.js:139:18)
    at node.js:974:3
bash-3.2$ exit

Script done on Wed Nov  2 14:51:00 2016
